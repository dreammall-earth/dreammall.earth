import{_ as s,c as a,a as n,o as t}from"./app-BOmc8sb4.js";const r={};function i(l,e){return t(),a("div",null,e[0]||(e[0]=[n(`<h1 id="kube-hetzner" tabindex="-1"><a class="header-anchor" href="#kube-hetzner"><span>Kube-Hetzner</span></a></h1><p>This will set up a Kubernetes cluster on Hetzner.</p><p>Follow the <a href="https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner?tab=readme-ov-file#%EF%B8%8F-prerequisites" target="_blank" rel="noopener noreferrer">prerequisites</a>.</p><p>Create a passphrase-less SSH key:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ssh-keygen <span class="token parameter variable">-f</span> ~/.ssh/id_ed25519</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Setup the kubernetes cluster:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">TF_VAR_hcloud_token</span><span class="token operator">=</span><span class="token operator">&lt;</span>HETZNER_API_TOKEN<span class="token operator">&gt;</span></span>
<span class="line">tofu apply</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Optionally, you can add local (git-ignored) overrides in <code>kube_override.tf</code>.</p><p>If you want, you can overwrite your <code>~/./kube/config</code> file:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">tofu output <span class="token parameter variable">--raw</span> kubeconfig <span class="token operator">&gt;</span> ~/.kube/config</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Or stream the output into another file and configure your <code>kubectl</code> to read from that file. Check the kubernetes docs how to organize <a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/" target="_blank" rel="noopener noreferrer">kubeconfig files</a>.</p><p>Because we keep the kube config file in our repository, you can encrypt it and check it into source:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">tofu output <span class="token parameter variable">--raw</span> kubeconfig <span class="token operator">|</span> sops encrypt /dev/stdin <span class="token operator">&gt;</span> <span class="token punctuation">..</span>/helmfile/secrets/kubeconfig</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Now your cluster is up and running!</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ kubectl get nodes</span>
<span class="line">NAME                         STATUS   ROLES                       AGE     VERSION</span>
<span class="line">k3s-agent-small-hav          Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                      3m1s    v1.29.6+k3s2</span>
<span class="line">k3s-control-plane-fsn1-qdm   Ready    control-plane,etcd,master   3m35s   v1.29.6+k3s2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to save costs you can destroy the cluster with:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">tofu destroy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,17)]))}const p=s(r,[["render",i],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/infrastructure/kube-dreammall/","title":"Kube-Hetzner","lang":"en-US","frontmatter":{},"headers":[],"git":{},"filePathRelative":"infrastructure/kube-dreammall/README.md"}');export{p as comp,c as data};
