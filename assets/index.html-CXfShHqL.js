import{_ as r,c as p,a as n,b as s,d as l,e as i,r as d,o,f as t}from"./app-BOmc8sb4.js";const c={};function u(h,e){const a=d("RouteLink");return o(),p("div",null,[e[4]||(e[4]=n(`<h1 id="helmfile" tabindex="-1"><a class="header-anchor" href="#helmfile"><span>Helmfile</span></a></h1><p>You need the following tools installed on your machine:</p><ul><li><p><a href="https://github.com/getsops/sops" target="_blank" rel="noopener noreferrer">sops</a></p></li><li><p><a href="https://github.com/FiloSottile/age" target="_blank" rel="noopener noreferrer">age</a></p></li><li><p><a href="https://kubernetes.io/docs/tasks/tools/" target="_blank" rel="noopener noreferrer">kubectl</a></p></li><li><p><a href="https://helmfile.readthedocs.io/en/latest/" target="_blank" rel="noopener noreferrer">helmfile</a></p><ul><li><a href="https://github.com/jkroepke/helm-secrets/wiki/Installation" target="_blank" rel="noopener noreferrer">helm secrets</a></li><li><a href="https://github.com/databus23/helm-diff" target="_blank" rel="noopener noreferrer">helm diff</a></li></ul></li></ul><p>Not required, but highly recommended:</p><ul><li><a href="https://k9scli.io/" target="_blank" rel="noopener noreferrer">k9s</a></li></ul><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h2><p>Append your public <code>age</code> public key to <a href="../../.sops.yaml">sops.yaml</a>. Ask another developer who can already read sops <a href="./secrets">secret files</a> to re-encrypt these files with your public key.</p><p>Place the kube config file so that your <code>kubectl</code> can read it:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/.kube</span>
<span class="line"><span class="token comment"># make sure you use sops --version &gt;= 3.9.0</span></span>
<span class="line">sops decrypt ./secrets/kubeconfig <span class="token operator">&gt;</span> ~/.kube/config</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="deployment" tabindex="-1"><a class="header-anchor" href="#deployment"><span>Deployment</span></a></h2><p>Relevant files that you might need to change:</p>`,11)),s("ul",null,[e[2]||(e[2]=s("li",null,[s("a",{href:"./helmfile.yaml.gotmpl"},"helmfile")],-1)),s("li",null,[l(a,{to:"/infrastructure/helmfile/environments/"},{default:i(()=>e[0]||(e[0]=[t("environments")])),_:1})]),e[3]||(e[3]=s("li",null,[s("a",{href:"./secrets"},"secret files")],-1)),s("li",null,[l(a,{to:"/infrastructure/helmfile/values/"},{default:i(()=>e[1]||(e[1]=[t("value files")])),_:1})])]),e[5]||(e[5]=n(`<p>Check the default environment:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">helmfile <span class="token function">diff</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check the <code>master</code> environment:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">helmfile <span class="token parameter variable">--environment</span> master <span class="token function">diff</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you are happy with what you see, you can do:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">helmfile apply</span>
<span class="line"><span class="token comment"># or</span></span>
<span class="line">helmfile <span class="token parameter variable">--environment</span> master apply</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Tip: To speed things up you can add the <code>--skip-deps</code> command line argument:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">helmfile --skip-deps <span class="token function">diff</span></span>
<span class="line">helmfile --skip-deps apply</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Observe the pods starting up:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl get pods <span class="token parameter variable">-w</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Or you can use:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">k9s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>After a while your release will be up and running.</p>`,13))])}const f=r(c,[["render",u],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/infrastructure/helmfile/","title":"Helmfile","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Deployment","slug":"deployment","link":"#deployment","children":[]}],"git":{},"filePathRelative":"infrastructure/helmfile/README.md"}');export{f as comp,b as data};
