import{_ as i}from"./dreammall-logo-BlW2bKby.js";import{_ as o,c as d,a as r,b as a,d as n,e as t,r as p,o as c,f as l}from"./app-BOmc8sb4.js";const h={};function u(m,e){const s=p("RouteLink");return c(),d("div",null,[e[5]||(e[5]=r('<h1 id="dreammall-earth" tabindex="-1"><a class="header-anchor" href="#dreammall-earth"><span>Dreammall.earth</span></a></h1><p><a href="https://nodejs.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/nodejs-&gt;%3D20.5.0-blue" alt="nodejs"></a><a href="https://www.npmjs.com/package/npm" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/npm-latest-blue" alt="npm"></a><a href="https://remark.js.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fdreammall-earth%2Fdreammall.earth%2Fmaster%2Fpackage.json&amp;query=devDependencies[&#39;remark-cli&#39;]&amp;label=remark-cli&amp;color=yellow" alt="remark-cli"></a><a href="https://vuepress.vuejs.org/" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fdreammall-earth%2Fdreammall.earth%2Fmaster%2Fpackage.json&amp;query=devDependencies.vuepress&amp;label=vuepress&amp;color=orange" alt="vuepress"></a></p><p>Dreammall.earth websites &amp; services</p><p><img src="'+i+'" alt=""></p><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules"><span>Modules</span></a></h2>',5)),a("ul",null,[a("li",null,[n(s,{to:"/authentik/"},{default:t(()=>e[0]||(e[0]=[l("Authentik")])),_:1})]),a("li",null,[n(s,{to:"/backend/"},{default:t(()=>e[1]||(e[1]=[l("Backend")])),_:1})]),a("li",null,[n(s,{to:"/deployment/"},{default:t(()=>e[2]||(e[2]=[l("Deployment")])),_:1})]),a("li",null,[n(s,{to:"/frontend/"},{default:t(()=>e[3]||(e[3]=[l("Frontend")])),_:1})]),a("li",null,[n(s,{to:"/presenter/"},{default:t(()=>e[4]||(e[4]=[l("Presenter")])),_:1})])]),e[6]||(e[6]=r(`<h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><p>The following commands are available:</p><table><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td><code>npm install</code></td><td>Project setup</td></tr><tr><td><strong>Test</strong></td><td></td></tr><tr><td><code>npm run remark</code></td><td>Run linter remark</td></tr><tr><td><strong>Documentation</strong></td><td></td></tr><tr><td><code>npm run docs:dev</code></td><td>Run Documentation in development mode</td></tr><tr><td><code>npm run docs:build</code></td><td>Build static documentation</td></tr><tr><td><strong>Release</strong></td><td></td></tr><tr><td><code>npm run release</code></td><td>Propagate release version &amp; generate changelog</td></tr></tbody></table><h2 id="shared-setup" tabindex="-1"><a class="header-anchor" href="#shared-setup"><span>Shared Setup</span></a></h2><p>Make sure you have <a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">docker</a> installed on your system.</p><p>Start authentik and mariadb database:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span> <span class="token parameter variable">--wait</span> authentik authentik-worker database</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="a-run-applications-with-docker" tabindex="-1"><a class="header-anchor" href="#a-run-applications-with-docker"><span>A) Run applications with Docker</span></a></h2><p>Run database migrations:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> compose run <span class="token parameter variable">--rm</span> backend <span class="token function">npm</span> run db:reset</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Start your desired applications:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> compose up backend frontend presenter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="b-run-applications-locally" tabindex="-1"><a class="header-anchor" href="#b-run-applications-locally"><span>B) Run applications locally</span></a></h2><p>Ensure you are using a <code>node --version</code> that matches the one specified in <a href=".tool-versions">.tool-versions</a>. E.g. you could install <a href="https://asdf-vm.com/guide/getting-started.html" target="_blank" rel="noopener noreferrer">asdf-vm</a>.</p><p>Set a temporary variable for the upcoming steps:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">rootFolder</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Setup backend:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> <span class="token variable">$rootFolder</span>/backend</span>
<span class="line"><span class="token function">cp</span> .env.dist .env</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"><span class="token function">npm</span> run db:reset</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Setup Frontend</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> <span class="token variable">$rootFolder</span>/frontend</span>
<span class="line"><span class="token function">cp</span> .env.dist .env</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Setup presenter:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> <span class="token variable">$rootFolder</span>/presenter</span>
<span class="line"><span class="token function">cp</span> .env.dist .env</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="start-services" tabindex="-1"><a class="header-anchor" href="#start-services"><span>Start Services</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> backend</span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> frontend</span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> presenter</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">3001</span></span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="endpoints" tabindex="-1"><a class="header-anchor" href="#endpoints"><span>Endpoints</span></a></h2><p>The following endpoints are provided for <code>docker compose up</code>:</p><table><thead><tr><th>Endpoint</th><th>Description</th></tr></thead><tbody><tr><td><a href="http://localhost:3306" target="_blank" rel="noopener noreferrer">http://localhost:3306</a></td><td>MySQL Database</td></tr><tr><td><a href="http://localhost:3001" target="_blank" rel="noopener noreferrer">http://localhost:3000</a></td><td>Presenter</td></tr><tr><td><a href="http://localhost:6006" target="_blank" rel="noopener noreferrer">http://localhost:6006</a></td><td>Presenter Storybook</td></tr><tr><td><a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3001</a></td><td>Frontend</td></tr><tr><td><a href="http://localhost:6007" target="_blank" rel="noopener noreferrer">http://localhost:6007</a></td><td>Frontend Storybook</td></tr><tr><td><a href="http://localhost:4000" target="_blank" rel="noopener noreferrer">http://localhost:4000</a></td><td>Backend GraphQL Playground</td></tr><tr><td><a href="http://localhost:8080" target="_blank" rel="noopener noreferrer">http://localhost:8080</a></td><td>Documentation</td></tr><tr><td><a href="http://localhost:8025" target="_blank" rel="noopener noreferrer">http://localhost:8080</a></td><td>Mailpit</td></tr><tr><td><a href="http://localhost:9000" target="_blank" rel="noopener noreferrer">http://localhost:8080</a></td><td>Authentik</td></tr></tbody></table><h2 id="clean-up-docker" tabindex="-1"><a class="header-anchor" href="#clean-up-docker"><span>Clean up docker</span></a></h2><p>If you run into issues with some docker left-overs, you can always stop+remove containers and volumes:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> compose down <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if you still have docker containers left:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If so, you can do:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> container stop <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-qa</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token function">docker</span> container <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-qa</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Prune docker caches:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> system prune</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Remove all your volumes:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> volume remove <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> volume list <span class="token parameter variable">-q</span><span class="token variable">)</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>OK, this is ultima ratio, remove everything (even images) with:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> system prune <span class="token parameter variable">-a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="how-to-release" tabindex="-1"><a class="header-anchor" href="#how-to-release"><span>How to release</span></a></h2><p>Generate a new version using <code>npm version --git-tag-version=false patch|minor|major</code>. Then run <code>npm run release</code> to propagate the new version and generate the changelog</p><h2 id="update" tabindex="-1"><a class="header-anchor" href="#update"><span>Update</span></a></h2><p>You can get a list of packages to update by running <code>npm run update</code>.</p><p>Appending <code>-u</code> will also update the packages in the <code>package.json</code>. You have to run <code>npm install</code> again after.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> run update -- <span class="token parameter variable">-u</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="external-tools" tabindex="-1"><a class="header-anchor" href="#external-tools"><span>External Tools</span></a></h2><p>This project is tested with Browserstack.</p><h2 id="license" tabindex="-1"><a class="header-anchor" href="#license"><span>License</span></a></h2><p><a href="./LICENSE">Apache 2.0</a></p>`,52))])}const k=o(h,[["render",u],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/","title":"Dreammall.earth","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Modules","slug":"modules","link":"#modules","children":[]},{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[]},{"level":2,"title":"Shared Setup","slug":"shared-setup","link":"#shared-setup","children":[]},{"level":2,"title":"A) Run applications with Docker","slug":"a-run-applications-with-docker","link":"#a-run-applications-with-docker","children":[]},{"level":2,"title":"B) Run applications locally","slug":"b-run-applications-locally","link":"#b-run-applications-locally","children":[{"level":3,"title":"Start Services","slug":"start-services","link":"#start-services","children":[]}]},{"level":2,"title":"Endpoints","slug":"endpoints","link":"#endpoints","children":[]},{"level":2,"title":"Clean up docker","slug":"clean-up-docker","link":"#clean-up-docker","children":[]},{"level":2,"title":"How to release","slug":"how-to-release","link":"#how-to-release","children":[]},{"level":2,"title":"Update","slug":"update","link":"#update","children":[]},{"level":2,"title":"External Tools","slug":"external-tools","link":"#external-tools","children":[]},{"level":2,"title":"License","slug":"license","link":"#license","children":[]}],"git":{},"filePathRelative":"README.md"}');export{k as comp,g as data};
