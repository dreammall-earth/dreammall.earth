version: "3.4"

services:
  ########################################################
  # DATABASE #############################################
  ########################################################
  database:
    networks: 
      - internal-net
      - external-net

  ########################################################
  # PRESENTER ############################################
  ########################################################
  presenter:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/presenter:local-development
    build:
      target: development
    ports:
      # development server port
      - 24678:24678
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- presenter_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./presenter:/app

  #######################################################
  # PRESENTER STORYBOOK #################################
  #######################################################
  presenter-storybook:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/presenter:local-storybook
    build:
      context: ./presenter
      target: storybook
    ports:
      - 6006:6006
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- presenter_storybook_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./presenter:/app

  #######################################################
  # PRESENTER DOCUMENTATION #############################
  #######################################################
  presenter-documentation:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/presenter:local-documentation
    build:
      context: ./presenter
      target: documentation
    ports:
      - 8081:8080
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- presenter_documentation_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./presenter:/app

  #######################################################
  # BACKEND #############################################
  #######################################################
  backend:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/backend:local-development
    build:
      context: ./backend
      target: development
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- backend_node_modules:/server/node_modules
      # bind the local folder to the docker to allow live reload
      - ./backend:/server

  #######################################################
  # BACKEND DOCUMENTATION ###############################
  #######################################################
  backend-documentation:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/backend:local-documentation
    build:
      context: ./backend
      target: documentation
    ports:
      - 8082:8080
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- backend_documentation_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./backend:/server

  ########################################################
  # DOCUMENTATION ########################################
  ########################################################
  documentation:
    # name the image so that it cannot be found in a DockerHub repository, otherwise it will not be built locally from the 'dockerfile' but pulled from there
    image: dreammall/dreammall:local-documentation
    build:
      target: documentation
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- documentation_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./:/app

volumes:
  presenter_node_modules:
  presenter_storybook_node_modules:
  presenter_documentation_node_modules:
  backend_node_modules:
  backend_documentation_node_modules:
  documentation_node_modules: