services:
  ########################################################
  # DATABASE #############################################
  ########################################################
  database:
    networks:
      - internal-net
      - external-net

  ########################################################
  # PRESENTER ############################################
  ########################################################
  presenter:
    build:
      target: development
    ports:
      # development server port
      - 24678:24678
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- presenter_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./presenter:/app

  #######################################################
  # PRESENTER STORYBOOK #################################
  #######################################################
  presenter-storybook:
    build:
      context: ./presenter
      target: storybook
    ports:
      - 6006:6006
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- presenter_storybook_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./presenter:/app

  ########################################################
  # FRONTEND #############################################
  ########################################################
  frontend:
    build:
      target: development
    ports:
      # development server port
      - 24679:24679
    environment:
      - NODE_ENV=development
      - PORT_HMR=24679
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- frontend_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./frontend:/app

  #######################################################
  # FRONTEND STORYBOOK ##################################
  #######################################################
  frontend-storybook:
    build:
      context: ./frontend
      target: storybook
    ports:
      - 6007:6006
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- frontend_storybook_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./frontend:/app

  ########################################################
  # ADMIN ################################################
  ########################################################
  admin:
    build:
      target: development
    ports:
      # development server port
      - 24680:24680
    environment:
      - NODE_ENV=development
      - PORT_HMR=24680
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- admin_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./admin:/app

  #######################################################
  # ADMIN STORYBOOK #####################################
  #######################################################
  admin-storybook:
    build:
      context: ./admin
      target: storybook
    ports:
      - 6008:6006
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- admin_storybook_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./admin:/app

  #######################################################
  # BACKEND #############################################
  #######################################################
  backend:
    build:
      context: ./backend
      target: development
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- backend_node_modules:/server/node_modules
      # bind the local folder to the docker to allow live reload
      - ./backend:/server

  ########################################################
  # DOCUMENTATION ########################################
  ########################################################
  documentation:
    build:
      target: documentation
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=development
    volumes:
      # This makes sure the docker container has its own node modules.
      # Therefore it is possible to have a different node version on the host machine
      #- documentation_node_modules:/app/node_modules
      # bind the local folder to the docker to allow live reload
      - ./:/app

volumes:
  presenter_node_modules:
  presenter_storybook_node_modules:
  frontend_node_modules:
  frontend_storybook_node_modules:
  admin_node_modules:
  admin_storybook_node_modules:
  backend_node_modules:
  documentation_node_modules:
