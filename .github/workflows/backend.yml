name: backend

on: [push,pull_request_target]

jobs:
  files-changed:
    name: Detect File Changes - backend/
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      backend-docs: ${{ steps.filter.outputs.backend-docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            backend:
              - '.github/workflows/**/*'
              - 'backend/**/*'
            backend-docs:
              - '.github/workflows/**/*'
              - 'backend/**/*.md'
              - 'backend/.vuepress/*'
              - 'backend/package.json'

  build:
    if: needs.files-changed.outputs.backend == 'true'
    name: Build - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: './.tool-versions'
      - name: Backend | Build
        run: npm install && npm run build
        working-directory: ./backend

  docker-production:
    if: needs.files-changed.outputs.backend == 'true'
    name: Build Docker Production - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Backend | Build Docker Production
        run: docker compose -f docker-compose.yml build backend

  docker-development:
    if: needs.files-changed.outputs.backend == 'true'
    name: Build Docker Development - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Backend | Build Docker Development
        run: docker compose build backend backend-documentation

  docs:
    if: needs.files-changed.outputs.backend-docs == 'true'
    name: Build Docs - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: './.tool-versions'
      - name: Backend | Build Docs
        run: npm install && npm run docs:build
        working-directory: ./backend

  lint:
    if: needs.files-changed.outputs.backend == 'true'
    name: Lint - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: './.tool-versions'
      - name: Backend | Lint
        run: npm install && npm run test:lint
        working-directory: ./backend

  unit:
    if: needs.files-changed.outputs.backend == 'true'
    name: Unit - Backend
    needs: files-changed
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://root:@localhost:3306/dreammall.earth
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: './.tool-versions'
      - name: Backend | docker-compose database
        run: docker-compose -f docker-compose.yml up --detach --no-deps database
      - name: Backend | Unit
        run: npm install && cp src/auth/public.pem . && npm run db:migrate && npm run test:unit
        working-directory: ./backend
